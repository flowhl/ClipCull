<UserControl x:Class="ClipCull.Controls.FolderTreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ClipCull.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="300">

    <UserControl.Resources>
        <!-- Expand/Collapse Toggle Button Style -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent" Width="16" Height="16">
                            <materialDesign:PackIcon x:Name="ExpandIcon" 
                                                   Kind="ChevronRight" 
                                                   Width="12" Height="12"
                                                   Foreground="{DynamicResource ForegroundBrush}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandIcon" Property="Kind" Value="ChevronDown"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandIcon" Property="Foreground" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeView Item Container Style -->
        <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="False"/>
            <Setter Property="IsSelected" Value="False"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="0,1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Item Header -->
                            <Border x:Name="PART_Header"
                                   Grid.Row="0"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerRadius="6"
                                   Padding="{TemplateBinding Padding}"
                                   Margin="{TemplateBinding Margin}">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Expander -->
                                    <ToggleButton x:Name="Expander"
                                                 Grid.Column="0"
                                                 Style="{StaticResource ExpandCollapseToggleStyle}"
                                                 IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Margin="0,0,4,0"/>

                                    <!-- Content -->
                                    <ContentPresenter x:Name="PART_ContentHost"
                                                     Grid.Column="1"
                                                     ContentSource="Header"
                                                     HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"/>
                                </Grid>
                            </Border>

                            <!-- Children -->
                            <ItemsPresenter x:Name="ItemsHost"
                                           Grid.Row="1"
                                           Margin="20,0,0,0"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Selected State -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>

                            <!-- Hide Expander for Files Only -->
                            <DataTrigger Binding="{Binding Tag.IsFile, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </DataTrigger>

                            <!-- Show Expander for Drives and Folders -->
                            <DataTrigger Binding="{Binding Tag.IsFile, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter TargetName="Expander" Property="Visibility" Value="Visible"/>
                            </DataTrigger>

                            <!-- Collapse Children -->
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeView Style -->
        <Style x:Key="FolderTreeViewStyle" TargetType="TreeView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle}"/>
        </Style>

        <!-- Drive Item Template -->
        <DataTemplate x:Key="DriveItemTemplate">
            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon x:Name="DriveIcon" 
                                       Kind="Harddisk" 
                                       Width="16" Height="16"
                                       Foreground="{DynamicResource ForegroundBrush}"
                                       Margin="0,0,8,0"/>
                <TextBlock Text="{Binding DisplayName}" 
                          VerticalAlignment="Center"
                          Foreground="{DynamicResource ForegroundBrush}"/>
                <TextBlock Text="{Binding SpaceInfo}" 
                          VerticalAlignment="Center" 
                          Margin="8,0,0,0"
                          FontSize="12"
                          Foreground="{DynamicResource MutedForegroundBrush}"/>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding DriveType}" Value="Network">
                    <Setter TargetName="DriveIcon" Property="Kind" Value="Server"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DriveType}" Value="Removable">
                    <Setter TargetName="DriveIcon" Property="Kind" Value="Usb"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DriveType}" Value="CDRom">
                    <Setter TargetName="DriveIcon" Property="Kind" Value="Disc"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- Folder Item Template -->
        <DataTemplate x:Key="FolderItemTemplate">
            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon x:Name="FolderIcon" 
                                       Kind="Folder" 
                                       Width="16" Height="16"
                                       Foreground="{DynamicResource ForegroundBrush}"
                                       Margin="0,0,8,0"/>
                <TextBlock Text="{Binding Name}" 
                          VerticalAlignment="Center"
                          Foreground="{DynamicResource ForegroundBrush}"/>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                    <Setter TargetName="FolderIcon" Property="Kind" Value="FolderOpen"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- File Item Template with Sidecar Icon -->
        <DataTemplate x:Key="FileItemTemplate">
            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon x:Name="FileIcon" 
                                       Kind="FileVideoOutline" 
                                       Width="16" Height="16"
                                       Foreground="{DynamicResource ForegroundBrush}"
                                       Margin="0,0,8,0"/>

                <!-- Sidecar Icon -->
                <materialDesign:PackIcon x:Name="SidecarIcon" 
                                       Kind="FileDocumentOutline" 
                                       Width="12" Height="12"
                                       Foreground="{DynamicResource AccentBrush}"
                                       Margin="0,0,4,0"
                                       ToolTip="Has sidecar file"
                                       Visibility="Collapsed"/>

                <TextBlock Text="{Binding Name}" 
                          VerticalAlignment="Center"
                          Foreground="{DynamicResource ForegroundBrush}"/>
            </StackPanel>
            <DataTemplate.Triggers>
                <!-- Show different icons based on file type -->
                <DataTrigger Binding="{Binding Extension}" Value=".jpg">
                    <Setter TargetName="FileIcon" Property="Kind" Value="Image"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Extension}" Value=".jpeg">
                    <Setter TargetName="FileIcon" Property="Kind" Value="Image"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Extension}" Value=".png">
                    <Setter TargetName="FileIcon" Property="Kind" Value="Image"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Extension}" Value=".mp4">
                    <Setter TargetName="FileIcon" Property="Kind" Value="FileVideoOutline"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Extension}" Value=".mov">
                    <Setter TargetName="FileIcon" Property="Kind" Value="FileVideoOutline"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Extension}" Value=".avi">
                    <Setter TargetName="FileIcon" Property="Kind" Value="FileVideoOutline"/>
                </DataTrigger>

                <!-- Show sidecar icon if file has sidecar -->
                <DataTrigger Binding="{Binding HasSidecar}" Value="True">
                    <Setter TargetName="SidecarIcon" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" 
                Background="{DynamicResource CardBrush}"
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="0,0,0,1"
                Padding="8">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                          Text="Folder Tree" 
                          FontSize="16"
                          FontWeight="SemiBold"
                          VerticalAlignment="Center"/>

                <Button Grid.Column="1"
                       x:Name="RefreshButton"
                       Click="RefreshButton_Click"
                       Width="28" Height="28"
                       Padding="6"
                       Background="Transparent"
                       BorderThickness="0"
                       ToolTip="Refresh Tree"
                       Margin="0,0,4,0">
                    <materialDesign:PackIcon Kind="Refresh" 
                                           Width="14" Height="14"
                                           Foreground="{DynamicResource ForegroundBrush}"/>
                </Button>

                <Button Grid.Column="2"
                       x:Name="ExpandAllButton"
                       Click="ExpandAllButton_Click"
                       Width="28" Height="28"
                       Padding="6"
                       Background="Transparent"
                       BorderThickness="0"
                       ToolTip="Expand All"
                       Margin="0,0,4,0">
                    <materialDesign:PackIcon Kind="ArrowExpandVertical" 
                                           Width="14" Height="14"
                                           Foreground="{DynamicResource ForegroundBrush}"/>
                </Button>

                <Button Grid.Column="3"
                       x:Name="CollapseAllButton"
                       Click="CollapseAllButton_Click"
                       Width="28" Height="28"
                       Padding="6"
                       Background="Transparent"
                       BorderThickness="0"
                       ToolTip="Collapse All">
                    <materialDesign:PackIcon Kind="ArrowCollapseVertical" 
                                           Width="14" Height="14"
                                           Foreground="{DynamicResource ForegroundBrush}"/>
                </Button>
            </Grid>
        </Border>

        <!-- Tree View - Fixed scrolling by removing ScrollViewer wrapper -->
        <TreeView x:Name="FolderTreeView" 
                 Grid.Row="1"
                 Style="{StaticResource FolderTreeViewStyle}"
                 SelectedItemChanged="FolderTreeView_SelectedItemChanged"
                 MouseDoubleClick="FolderTreeView_MouseDoubleClick"
                 KeyDown="FolderTreeView_KeyDown"
                 Margin="8"/>

        <!-- Status Bar -->
        <Border Grid.Row="2" 
                Background="{DynamicResource MutedBrush}"
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="0,1,0,0"
                Padding="8,4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="StatusTextBlock"
                          Grid.Column="0"
                          Text="{Binding StatusText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                          FontSize="12"
                          Foreground="{DynamicResource MutedForegroundBrush}"
                          VerticalAlignment="Center"/>

                <ProgressBar x:Name="LoadingProgressBar"
                            Grid.Column="1"
                            Width="80"
                            Height="4"
                            IsIndeterminate="True"
                            Visibility="{Binding IsLoading, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"
                            Margin="8,0,0,0"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>