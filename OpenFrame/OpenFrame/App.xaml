<Application x:Class="OpenFrame.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:OpenFrame"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:xcad="https://github.com/Dirkster99/AvalonDock"
             StartupUri="MainWindow.xaml"
             xmlns:conv="clr-namespace:OpenFrame.Controls.Converters" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Application.Resources>
        <ResourceDictionary>
            <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
            <!--<ResourceDictionary.MergedDictionaries>
                -->
            <!-- Material Design -->
            <!--
                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="Blue" SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>-->

            <!-- Base Colors -->
            <Color x:Key="Background">#FF020817</Color>
            <Color x:Key="Foreground">#FFFAFAFA</Color>
            <Color x:Key="Card">#FF020817</Color>
            <Color x:Key="CardForeground">#FFFAFAFA</Color>
            <Color x:Key="Popover">#FF020817</Color>
            <Color x:Key="PopoverForeground">#FFFAFAFA</Color>

            <!-- Primary Colors -->
            <Color x:Key="Primary">#FFFAFAFA</Color>
            <Color x:Key="PrimaryForeground">#FF09090B</Color>

            <!-- Secondary Colors -->
            <Color x:Key="Secondary">#FF27272A</Color>
            <Color x:Key="SecondaryForeground">#FFFAFAFA</Color>

            <!-- Muted Colors -->
            <Color x:Key="Muted">#FF27272A</Color>
            <Color x:Key="MutedForeground">#FFA1A1AA</Color>

            <!-- Accent Colors -->
            <Color x:Key="Accent">#FF27272A</Color>
            <Color x:Key="AccentForeground">#FFFAFAFA</Color>

            <!-- Destructive Colors -->
            <Color x:Key="Destructive">#FFDC2626</Color>
            <Color x:Key="DestructiveForeground">#FFFAFAFA</Color>

            <!-- Border Colors -->
            <Color x:Key="Border">#FF27272A</Color>
            <Color x:Key="Input">#FF27272A</Color>
            <Color x:Key="Ring">#FFFAFAFA</Color>

            <!-- Convert to Brushes -->
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource Background}"/>
            <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Foreground}"/>
            <SolidColorBrush x:Key="CardBrush" Color="{StaticResource Card}"/>
            <SolidColorBrush x:Key="CardForegroundBrush" Color="{StaticResource CardForeground}"/>
            <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource Primary}"/>
            <SolidColorBrush x:Key="PrimaryForegroundBrush" Color="{StaticResource PrimaryForeground}"/>
            <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource Secondary}"/>
            <SolidColorBrush x:Key="SecondaryForegroundBrush" Color="{StaticResource SecondaryForeground}"/>
            <SolidColorBrush x:Key="MutedBrush" Color="{StaticResource Muted}"/>
            <SolidColorBrush x:Key="MutedForegroundBrush" Color="{StaticResource MutedForeground}"/>
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource Accent}"/>
            <SolidColorBrush x:Key="AccentForegroundBrush" Color="{StaticResource AccentForeground}"/>
            <SolidColorBrush x:Key="DestructiveBrush" Color="{StaticResource Destructive}"/>
            <SolidColorBrush x:Key="DestructiveForegroundBrush" Color="{StaticResource DestructiveForeground}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource Border}"/>
            <SolidColorBrush x:Key="InputBrush" Color="{StaticResource Input}"/>
            <SolidColorBrush x:Key="RingBrush" Color="{StaticResource Ring}"/>

            <!-- Icon Colors (System.Drawing.Color compatible) -->
            <Color x:Key="ForegroundIcon">#FFFAFAFA</Color>
            <Color x:Key="PrimaryForegroundIcon">#FF09090B</Color>
            <Color x:Key="SecondaryForegroundIcon">#FFFAFAFA</Color>
            <Color x:Key="MutedForegroundIcon">#FFA1A1AA</Color>
            <Color x:Key="AccentForegroundIcon">#FFFAFAFA</Color>
            <Color x:Key="DestructiveForegroundIcon">#FFFAFAFA</Color>
            <Color x:Key="SuccessIcon">#FF22C55E</Color>
            <Color x:Key="WarningIcon">#FFFBBF24</Color>
            <Color x:Key="InfoIcon">#FF3B82F6</Color>

            <!-- Timeline-specific icon colors -->
            <Color x:Key="InPointIcon">#FF22C55E</Color>
            <Color x:Key="OutPointIcon">#FFEF4444</Color>
            <Color x:Key="SubClipIcon">#FFA855F7</Color>
            <Color x:Key="MarkerIcon">#FFFBBF24</Color>
            <Color x:Key="PlayheadIcon">#FFFAFAFA</Color>

            <!-- ============================================ -->
            <!-- TYPOGRAPHY -->
            <!-- ============================================ -->

            <FontFamily x:Key="FontMono">Consolas, Monaco, 'Courier New', monospace</FontFamily>
            <FontFamily x:Key="FontSans">Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif</FontFamily>

            <!-- ============================================ -->
            <!-- BUTTON STYLES (SHADCN-INSPIRED) -->
            <!-- ============================================ -->

            <!-- Base Button Template -->
            <ControlTemplate x:Key="BaseButtonTemplate" TargetType="Button">
                <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="6"
                    SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" TargetName="border" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Primary Button -->
            <Style x:Key="primary" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <!-- Primary Large -->
            <Style x:Key="primary-lg" TargetType="Button" BasedOn="{StaticResource primary}">
                <Setter Property="Padding" Value="16,12"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <!-- Primary Small -->
            <Style x:Key="primary-sm" TargetType="Button" BasedOn="{StaticResource primary}">
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <!-- Secondary Button -->
            <Style x:Key="secondary" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <!-- Secondary Large -->
            <Style x:Key="secondary-lg" TargetType="Button" BasedOn="{StaticResource secondary}">
                <Setter Property="Padding" Value="16,12"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <!-- Secondary Small -->
            <Style x:Key="secondary-sm" TargetType="Button" BasedOn="{StaticResource secondary}">
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <!-- Destructive Button -->
            <Style x:Key="destructive" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource DestructiveBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DestructiveForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <!-- Ghost Button -->
            <Style x:Key="ghost" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <!-- Icon Button -->
            <Style x:Key="icon" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Width" Value="36"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <!-- Icon Large -->
            <Style x:Key="icon-lg" TargetType="Button" BasedOn="{StaticResource icon}">
                <Setter Property="Width" Value="44"/>
                <Setter Property="Height" Value="44"/>
                <Setter Property="Padding" Value="10"/>
            </Style>

            <!-- Icon Small -->
            <Style x:Key="icon-sm" TargetType="Button" BasedOn="{StaticResource icon}">
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Padding" Value="6"/>
            </Style>

            <!-- ============================================ -->
            <!-- INPUT STYLES -->
            <!-- ============================================ -->

            <Style x:Key="input" TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource InputBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="SelectionBrush" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource RingBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- ============================================ -->
            <!-- LABELS -->
            <!-- ============================================ -->
            <Style x:Key="primary-lb" TargetType="Label">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Margin" Value="0,8,0,4"/>
            </Style>

            <!-- ============================================ -->
            <!-- CARD STYLES -->
            <!-- ============================================ -->

            <Style x:Key="card" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource CardBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="16"/>
            </Style>

            <!-- ============================================ -->
            <!-- WINDOW & GLOBAL STYLES -->
            <!-- ============================================ -->

            <Style TargetType="Window">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            </Style>

            <Style TargetType="UserControl">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <!-- ============================================ -->
            <!-- TEXT STYLES -->
            <!-- ============================================ -->

            <Style x:Key="h1" TargetType="TextBlock">
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="LineHeight" Value="40"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <Style x:Key="h2" TargetType="TextBlock">
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="LineHeight" Value="32"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <Style x:Key="h3" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="LineHeight" Value="28"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <Style x:Key="h4" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="LineHeight" Value="24"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <Style x:Key="body" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="LineHeight" Value="20"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <Style x:Key="small" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="LineHeight" Value="16"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <Style x:Key="muted" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="LineHeight" Value="20"/>
                <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}"/>
            </Style>

            <Style x:Key="code" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{StaticResource FontMono}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Background" Value="{StaticResource MutedBrush}"/>
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Style>

            <!-- ============================================ -->
            <!-- SCROLLBAR STYLES (SHADCN-INSPIRED) -->
            <!-- ============================================ -->

            <!-- Scrollbar Track -->
            <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch" 
                                     Width="Auto" Height="Auto" 
                                     Fill="Transparent"/>
                                <Border x:Name="CornerScrollBarRectangle" 
                                  CornerRadius="4" 
                                  HorizontalAlignment="Stretch" 
                                  VerticalAlignment="Stretch" 
                                  Width="Auto" Height="Auto" 
                                  Margin="0,1,0,1" 
                                  Background="{StaticResource MutedBrush}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto"/>
                                    <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Scrollbar Button -->
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Scrollbar PageButton -->
            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Scrollbar Thumb -->
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border CornerRadius="4" 
                              Background="{StaticResource MutedBrush}" 
                              BorderBrush="Transparent" 
                              BorderThickness="0"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Vertical Scrollbar -->
            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="0"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="0"/>
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3" CornerRadius="4" Background="Transparent"/>
                    <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarButton}" Height="0" Command="ScrollBar.LineUpCommand"/>
                    <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarButton}" Height="0" Command="ScrollBar.LineDownCommand"/>
                </Grid>
            </ControlTemplate>

            <!-- Horizontal Scrollbar -->
            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="0"/>
                        <ColumnDefinition Width="0.00001*"/>
                        <ColumnDefinition MaxWidth="0"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3" CornerRadius="4" Background="Transparent"/>
                    <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarButton}" Width="0" Command="ScrollBar.LineLeftCommand"/>
                    <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarButton}" Width="0" Command="ScrollBar.LineRightCommand"/>
                </Grid>
            </ControlTemplate>

            <!-- Main Scrollbar Style -->
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="8"/>
                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="8"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ============================================ -->
            <!-- COMBOBOX STYLES -->
            <!-- ============================================ -->

            <!-- ComboBox Toggle Button Template -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border" 
                Grid.ColumnSpan="2"
                CornerRadius="6"
                Background="{StaticResource InputBrush}"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="1" />
                    <Border Grid.Column="0"
                CornerRadius="6,0,0,6" 
                Margin="1" 
                Background="{StaticResource InputBrush}" 
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,0,1,0" />
                    <Path x:Name="Arrow"
              Grid.Column="1"     
              Fill="{StaticResource MutedForegroundBrush}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z"
              Width="8"
              Height="4"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource AccentBrush}"/>
                        <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource AccentForegroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="Border" Value="{StaticResource MutedBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- ComboBox TextBox Template -->
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border x:Name="PART_ContentHost" 
            Focusable="False" 
            Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <!-- Main ComboBox Template -->
            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
                <Grid>
                    <ToggleButton Name="ToggleButton" 
                      Template="{StaticResource ComboBoxToggleButton}" 
                      Grid.Column="2" 
                      Focusable="false"
                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                      ClickMode="Press">
                    </ToggleButton>
                    <ContentPresenter Name="ContentSite"
                          IsHitTestVisible="False" 
                          Content="{TemplateBinding SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                          Margin="8,4,25,4"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left" />
                    <TextBox x:Name="PART_EditableTextBox"
                 Style="{x:Null}" 
                 Template="{StaticResource ComboBoxTextBox}" 
                 HorizontalAlignment="Left" 
                 VerticalAlignment="Center" 
                 Margin="8,4,25,4"
                 Focusable="True" 
                 Background="Transparent"
                 Foreground="{StaticResource ForegroundBrush}"
                 Visibility="Hidden"
                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    <Popup Name="Popup"
               Placement="Bottom"
               IsOpen="{TemplateBinding IsDropDownOpen}"
               AllowsTransparency="True" 
               Focusable="False"
               PopupAnimation="Slide">
                        <Grid Name="DropDown"
                  SnapsToDevicePixels="True"                
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="DropDownBorder"
                        Background="{StaticResource CardBrush}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BorderBrush}"
                        CornerRadius="6"
                        Margin="0,1,0,0">
                                <Border.Effect>
                                    <DropShadowEffect Color="#FF000000" 
                                          Opacity="0.3" 
                                          ShadowDepth="2" 
                                          BlurRadius="6"/>
                                </Border.Effect>
                            </Border>
                            <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </Trigger>
                    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="6"/>
                        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                    </Trigger>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- ComboBox Style -->
            <Style x:Key="CustomComboBox" TargetType="ComboBox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            </Style>

            <!-- ComboBoxItem Style -->
            <Style x:Key="CustomComboBoxItem" TargetType="ComboBoxItem">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border Name="Border"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="4"
                        Margin="2">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Default ComboBox Style (applies to all ComboBoxes automatically) -->
            <Style TargetType="ComboBox" BasedOn="{StaticResource CustomComboBox}"/>
            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource CustomComboBoxItem}"/>

            <!-- CheckBox Template -->
            <ControlTemplate x:Key="ShadcnCheckBoxTemplate" TargetType="CheckBox">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border x:Name="checkboxBorder" 
                            Grid.Column="0"
                            Width="18" 
                            Height="18" 
                            Background="{StaticResource BackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4"
                            VerticalAlignment="Center"
                            Margin="0,0,8,0">

                        <Grid>
                            <Path x:Name="checkIcon"
                                  Width="12"
                                  Height="12"
                                  Stretch="Uniform"
                                  Fill="{StaticResource PrimaryForegroundBrush}"
                                  Data="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>

                            <Rectangle x:Name="indeterminateIcon"
                                       Width="8"
                                       Height="2"
                                       Fill="{StaticResource PrimaryForegroundBrush}"
                                       Visibility="Collapsed"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ContentPresenter x:Name="contentPresenter"
                                      Grid.Column="1"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="checkboxBorder" Property="Background" Value="{StaticResource PrimaryBrush}"/>
                        <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                        <Setter TargetName="checkIcon" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter TargetName="checkboxBorder" Property="Background" Value="{StaticResource PrimaryBrush}"/>
                        <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                        <Setter TargetName="indeterminateIcon" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource RingBrush}"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource RingBrush}"/>
                        <Setter TargetName="checkboxBorder" Property="BorderThickness" Value="2"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="checkboxBorder" Property="Opacity" Value="0.5"/>
                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEnabled" Value="False"/>
                            <Condition Property="IsChecked" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="checkboxBorder" Property="Background" Value="{StaticResource MutedBrush}"/>
                        <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource MutedBrush}"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Default CheckBox Style -->
            <Style TargetType="CheckBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template" Value="{StaticResource ShadcnCheckBoxTemplate}"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            </Style>

            <!-- Small CheckBox Style -->
            <Style x:Key="checkbox-sm" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="checkboxBorder" 
                                        Grid.Column="0"
                                        Width="14" 
                                        Height="14" 
                                        Background="{StaticResource BackgroundBrush}"
                                        BorderBrush="{StaticResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        VerticalAlignment="Center"
                                        Margin="0,0,6,0">

                                    <Grid>
                                        <Path x:Name="checkIcon"
                                              Width="8"
                                              Height="8"
                                              Stretch="Uniform"
                                              Fill="{StaticResource PrimaryForegroundBrush}"
                                              Data="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z"
                                              Visibility="Collapsed"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>

                                        <Rectangle x:Name="indeterminateIcon"
                                                   Width="6"
                                                   Height="2"
                                                   Fill="{StaticResource PrimaryForegroundBrush}"
                                                   Visibility="Collapsed"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>

                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkboxBorder" Property="Background" Value="{StaticResource PrimaryBrush}"/>
                                    <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                    <Setter TargetName="checkIcon" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="checkboxBorder" Property="Background" Value="{StaticResource PrimaryBrush}"/>
                                    <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                    <Setter TargetName="indeterminateIcon" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource RingBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource RingBrush}"/>
                                    <Setter TargetName="checkboxBorder" Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="checkboxBorder" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="checkboxBorder" Property="Background" Value="{StaticResource MutedBrush}"/>
                                    <Setter TargetName="checkboxBorder" Property="BorderBrush" Value="{StaticResource MutedBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Tab Item Template -->
            <ControlTemplate x:Key="ShadcnTabItemTemplate" TargetType="TabItem">
                <Border x:Name="templateRoot"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0,0,0,2"
                        Margin="0,0,0,0"
                        SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentSource="Header"
                                      Focusable="False"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Margin="12,8"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="Transparent"/>
                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsSelected" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                        <Setter TargetName="templateRoot" Property="BorderBrush" Value="Transparent"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Default TabItem Style -->
            <Style TargetType="TabItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template" Value="{StaticResource ShadcnTabItemTemplate}"/>
            </Style>

            <!-- Small TabItem Style -->
            <Style x:Key="tab-sm" TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="templateRoot"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0,0,0,2"
                                    Margin="0,0,0,0"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentSource="Header"
                                                  Focusable="False"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="8,6"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="Transparent"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- TabControl Template -->
            <ControlTemplate x:Key="ShadcnTabControlTemplate" TargetType="TabControl">
                <Grid x:Name="templateRoot" 
                      ClipToBounds="True" 
                      SnapsToDevicePixels="True" 
                      KeyboardNavigation.TabNavigation="Local">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                        <RowDefinition x:Name="RowDefinition1" Height="*"/>
                    </Grid.RowDefinitions>

                    <Border x:Name="headerBorder"
                            Grid.Row="0"
                            Background="Transparent"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="0,0,0,1"
                            Padding="0,0,0,0">
                        <TabPanel x:Name="headerPanel"
                                  Background="Transparent"
                                  IsItemsHost="True"
                                  Margin="0"
                                  KeyboardNavigation.TabIndex="1"/>
                    </Border>

                    <Border x:Name="contentPanel"
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </Grid>
            </ControlTemplate>

            <!-- Default TabControl Style -->
            <Style TargetType="TabControl">
                <Setter Property="Padding" Value="16"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template" Value="{StaticResource ShadcnTabControlTemplate}"/>
            </Style>

            <!-- Pills TabControl Style -->
            <Style x:Key="tabs-pills" TargetType="TabControl" BasedOn="{StaticResource {x:Type TabControl}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid x:Name="templateRoot" 
                                  ClipToBounds="True" 
                                  SnapsToDevicePixels="True" 
                                  KeyboardNavigation.TabNavigation="Local">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                                </Grid.RowDefinitions>

                                <Border x:Name="headerBorder"
                                        Grid.Row="0"
                                        Background="{StaticResource MutedBrush}"
                                        BorderThickness="0"
                                        CornerRadius="6"
                                        Padding="4">
                                    <TabPanel x:Name="headerPanel"
                                              Background="Transparent"
                                              IsItemsHost="True"
                                              Margin="0"
                                              KeyboardNavigation.TabIndex="1"/>
                                </Border>

                                <Border x:Name="contentPanel"
                                        Grid.Row="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local"
                                        Margin="0,8,0,0">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      ContentSource="SelectedContent"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Pills TabItem Style -->
            <Style x:Key="tab-pill" TargetType="TabItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="{StaticResource FontSans}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="templateRoot"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="4"
                                    Margin="{TemplateBinding Margin}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentSource="Header"
                                                  Focusable="False"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="8,6"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="templateRoot" Property="Background" Value="Transparent"/>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource MutedForegroundBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
